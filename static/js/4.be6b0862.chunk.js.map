{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","style","dialog","to","id","activeClassName","active","user","src","img","alt","name","Message","message","AddMessageFormRedux","reduxForm","form","enterMessage","onSubmit","handleSubmit","Field","component","Textarea","placeholder","messageField","rows","messageBtn","compose","connect","state","dialogsPage","dispatch","addMessage","newMessageBody","addMessageCreator","withAuthRedirect","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","dialogs","dialogsItems","messages","values"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,8BAA8B,WAAa,4BAA4B,KAAO,wB,6FCKzWC,EAAoC,SAACC,GAC9C,OACI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAMK,OAA5D,SACI,sBAAKN,UAAWC,IAAMM,KAAtB,UACI,qBAAKC,IAAKT,EAAMU,IAAKC,IAAK,WAC1B,8BAAMX,EAAMY,eCRnBC,EAAkC,SAACb,GAC5C,OACI,qBAAKC,UAAWC,IAAMY,QAAtB,SAAgCd,EAAMc,W,0BCyDxCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAnBwB,SAAChB,GACjD,OACI,uBACIC,UAAWC,IAAMgB,aACjBC,SAAUnB,EAAMoB,aAFpB,UAGI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXX,KAAK,iBACLY,YAAY,wBACZvB,UAAWC,IAAMuB,aACjBC,KAAM,IAEV,wBAAQzB,UAAWC,IAAMyB,WAAzB,wB,wBCxBGC,sBACXC,aAfkB,SAACC,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACC,GACtB,MAAO,CACHC,WAAY,SAACC,GACTF,EAASG,YAAkBD,SAOnCE,IAFWR,EDvB6C,SAAC5B,GACzD,IAAIqC,EAAkBrC,EAAM+B,YAAYO,YAAYC,KAAI,SAACC,GAAD,OAAoB,8BACxE,cAAC,EAAD,CAAY5B,KAAM4B,EAAE5B,KAAMP,GAAImC,EAAEnC,GAAIK,IAAK8B,EAAE9B,OADuC8B,EAAEnC,OAGpFoC,EAAmBzC,EAAM+B,YAAYW,aAAaH,KAAI,SAACI,GAAD,OAAqB,8BAC3E,cAAC,EAAD,CAAS7B,QAAS6B,EAAE7B,QAAST,GAAIsC,EAAEtC,MADkDsC,EAAEtC,OAc3F,OACI,sBAAKJ,UAAWC,IAAM0C,QAAtB,UACI,qBAAK3C,UAAWC,IAAM2C,aAAtB,SACKR,IAEL,sBAAKpC,UAAWC,IAAM4C,SAAtB,UACI,8BACKL,IAEL,cAAC1B,EAAD,CAAqBI,SAhBX,SAAC4B,GACfA,EAAOb,gBACPlC,EAAMiC,WAAWc,EAAOb,gBAE5Ba,EAAOb,eAAiB","file":"static/js/4.be6b0862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1yEBp\",\"dialog\":\"Dialogs_dialog__3dgPM\",\"active\":\"Dialogs_active__3Hhyu\",\"dialogsItems\":\"Dialogs_dialogsItems__1BAK0\",\"messages\":\"Dialogs_messages__tjjPM\",\"message\":\"Dialogs_message__1sQf2\",\"enterMessage\":\"Dialogs_enterMessage__qM97e\",\"messageField\":\"Dialogs_messageField__31jsL\",\"messageBtn\":\"Dialogs_messageBtn__dG_J-\",\"user\":\"Dialogs_user__1pV2N\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport style from './../Dialogs.module.css'\r\nimport {DialogsType} from '../../../redux/dialogs-reducer';\r\n\r\n\r\nexport const DialogItem: React.FC<DialogsType> = (props) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={style.active}>\r\n                <div className={style.user}>\r\n                    <img src={props.img} alt={'avatar'}/>\r\n                    <div>{props.name}</div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport style from './../Dialogs.module.css'\r\nimport {MessagesType} from '../../../redux/dialogs-reducer';\r\n\r\nexport const Message: React.FC<MessagesType> = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n}","import React from 'react'\r\nimport style from './Dialogs.module.css'\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {Message} from './Message/Message';\r\nimport {DialogsContainerPropsType} from './DialogsContainer';\r\nimport {DialogsType, MessagesType} from '../../redux/dialogs-reducer';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../common/FormsControl/FormsControls';\r\n\r\nexport const Dialogs: React.FC<DialogsContainerPropsType> = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogsData.map((d: DialogsType) => <div key={d.id}>\r\n        <DialogItem name={d.name} id={d.id} img={d.img}/></div>)\r\n\r\n    let messagesElements = props.dialogsPage.messagesData.map((m: MessagesType) => <div key={m.id}>\r\n        <Message message={m.message} id={m.id}/></div>)\r\n\r\n    type ValuesType = {\r\n        newMessageBody?: string\r\n    }\r\n\r\n    const addNewMessage = (values: ValuesType) => {\r\n        if (values.newMessageBody) {\r\n            props.addMessage(values.newMessageBody)\r\n        }\r\n        values.newMessageBody = ''\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps> = (props) => {\r\n    return (\r\n        <form\r\n            className={style.enterMessage}\r\n            onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newMessageBody\"\r\n                placeholder=\"Enter your message...\"\r\n                className={style.messageField}\r\n                rows={1}\r\n            />\r\n            <button className={style.messageBtn}>\r\n                Send\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)","import {addMessageCreator, DialogsPageType} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {compose, Dispatch} from 'redux';\r\nimport React from 'react';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}