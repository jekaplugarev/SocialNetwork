{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","img/facebook.svg","img/instagram.svg","components/Profile/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","style","marginTop","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","descriptionBlock","img","src","photos","large","userPhoto","alt","name","fullName","job","lookingForAJob","lookingForAJobDescription","contacts","facebook","href","instagram","Preloader","Post","item","post","postMessage","message","likes","heart","xmlns","width","height","fill","viewBox","d","likesCount","MyPosts","React","memo","postsElements","profilePage","postsData","map","p","id","postsBlock","postsTitle","AddMessageFormRedux","onSubmit","values","newPostText","addPost","posts","reduxForm","form","enterPost","handleSubmit","Field","component","Textarea","placeholder","postField","rows","postBtn","MyPostsContainer","connect","state","dispatch","Profile","ProfileContainer","userId","this","match","params","String","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.ce0781de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1bgYt\",\"img\":\"ProfileInfo_img__1M6mA\",\"name\":\"ProfileInfo_name__1gy_w\",\"status\":\"ProfileInfo_status__2p-2z\",\"contacts\":\"ProfileInfo_contacts__1t_4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3ynEW\",\"postsTitle\":\"MyPosts_postsTitle__22cc0\",\"posts\":\"MyPosts_posts__3XxMU\",\"postBtn\":\"MyPosts_postBtn__3h1tR\",\"enterPost\":\"MyPosts_enterPost__3SywO\",\"postField\":\"MyPosts_postField__u-2T_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1L5P-\",\"likes\":\"Post_likes__2MnPI\",\"heart\":\"Post_heart__3u0IW\",\"postMessage\":\"Post_postMessage__2YC9O\",\"post\":\"Post_post__3Xe3c\"};","export default __webpack_public_path__ + \"static/media/facebook.1bc02887.svg\";","export default __webpack_public_path__ + \"static/media/instagram.7a3b5420.svg\";","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusType> = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div style={{marginTop: '15px'}}>\r\n                <span onDoubleClick={activateEditMode}>\r\n                    {props.status}\r\n                </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div style={{marginTop: '15px'}}>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                    onBlur={deactivateEditMode}\r\n                    autoFocus={true}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\nimport {ProfileAPIType} from '../../../redux/profile-reducer';\r\nimport facebook from '../../../img/facebook.svg'\r\nimport instagram from '../../../img/instagram.svg'\r\nimport userPhoto from '../../../img/user.jpg';\r\nimport {ProfileStatusWithHooks} from '../ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}: ProfileAPIType) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.descriptionBlock}>\r\n                <div className={style.img}>\r\n                    <img\r\n                        src={profile.photos.large ? profile.photos.large : userPhoto} alt=\"Ava\"/>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div className={style.name}>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div>\r\n                    <div className={style.job}>\r\n                        <b>Looking For A Job:</b> {profile.lookingForAJob ? 'Yes' : 'No'}\r\n                    </div>\r\n                    <div className={style.status}>\r\n                        <b>{profile.lookingForAJobDescription}</b>\r\n                    </div>\r\n                </div>\r\n                <div className={style.contacts}>\r\n                    <div>\r\n                        <img src={facebook} alt=\"facebook\"/>\r\n                        <a href={profile.contacts.facebook}>\r\n                            {profile.contacts.facebook ? profile.contacts.facebook : 'I am not here'}\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <img src={instagram} alt=\"instagram\"/>\r\n                        <a href={profile.contacts.instagram}>\r\n                            {profile.contacts.instagram ? profile.contacts.instagram : 'I am not here'}\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport {PostsType} from '../../../../redux/profile-reducer';\r\n\r\nexport const Post: React.FC<PostsType> = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <div className={style.post}>\r\n                <img src=\"https://pixelbox.ru/wp-content/uploads/2020/12/ava-vk-cats-90.jpg\"\r\n                     alt=\"Avatar\"/>\r\n                <span className={style.postMessage}>\r\n                    {props.message}\r\n                </span>\r\n            </div>\r\n            <div className={style.likes}>\r\n                <div className={style.heart}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                         viewBox=\"0 0 16 16\">\r\n                        <path\r\n                            d=\"m8 6.236-.894-1.789c-.222-.443-.607-1.08-1.152-1.595C5.418 2.345 4.776 2 4 2 2.324 2 1 3.326 1 4.92c0 1.211.554 2.066 1.868 3.37.337.334.721.695 1.146 1.093C5.122 10.423 6.5 11.717 8 13.447c1.5-1.73 2.878-3.024 3.986-4.064.425-.398.81-.76 1.146-1.093C14.446 6.986 15 6.131 15 4.92 15 3.326 13.676 2 12 2c-.777 0-1.418.345-1.954.852-.545.515-.93 1.152-1.152 1.595L8 6.236zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.55 7.55 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>{props.likesCount} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport {MyPostsContainerPropsType} from './MyPostsContainer';\r\nimport {PostsType} from '../../../redux/profile-reducer';\r\nimport {Post} from './Post/Post';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/FormsControl/FormsControls';\r\n\r\nexport const MyPosts = React.memo((props: MyPostsContainerPropsType) => {\r\n    let postsElements = props.profilePage.postsData.map((p: PostsType) => <div key={p.id}><Post\r\n        message={p.message}\r\n        likesCount={p.likesCount}\r\n        id={p.id}/></div>)\r\n\r\n    type ValuesType = {\r\n        newPostText?: string\r\n    }\r\n\r\n    const onAddPost = (values: ValuesType) => {\r\n        if (values.newPostText) {\r\n            props.addPost(values.newPostText)\r\n        }\r\n        values.newPostText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3 className={style.postsTitle}>My posts</h3>\r\n            <AddMessageFormRedux onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n// const maxLength100 = maxLengthCreator(100)\r\n\r\nlet AddNewPostForm: React.FC<InjectedFormProps> = (props) => {\r\n    return (<form\r\n            className={style.enterPost}\r\n            onSubmit={props.handleSubmit}\r\n        >\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newPostText\"\r\n                placeholder=\"Post message...\"\r\n                className={style.postField}\r\n                rows={1}\r\n            />\r\n            <button className={style.postBtn}>\r\n                Add Post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n        form: 'profileAddMessageForm'\r\n    }\r\n)(AddNewPostForm)","import {MyPosts} from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {addPost, ProfilePageType} from '../../../redux/profile-reducer';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: ProfilePageType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nexport type MyPostsContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport style from './Profile.module.css'\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\nimport {ProfileAPIType} from '../../redux/profile-reducer';\r\n\r\nexport const Profile = (props: ProfileAPIType) => {\r\n    return (\r\n        <div className={style.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Profile} from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getStatus, getUserProfile, ProfilePageType, updateStatus} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfilePageType\r\n    authorizedUserId: number | null\r\n}\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport type ProfileContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\nclass ProfileContainer extends React.Component <PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        !userId && (userId = String(this.props.authorizedUserId)) //17666\r\n\r\n        this.props.getUserProfile(+userId)\r\n        this.props.getStatus(+userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile.profile}\r\n            status={this.props.profile.status}\r\n            updateStatus={this.props.updateStatus}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    profile: state.profilePage,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}